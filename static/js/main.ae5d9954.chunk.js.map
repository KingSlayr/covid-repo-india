{"version":3,"sources":["util.js","Chart.js","Map.js","StatBox.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["indian_states_code","color","confirmed","bgColor","borderColor","multiplier","recovered","deceased","Chart","type","stateCurrent","labels","dataState","useState","chartData","setChartData","ourChart","register","zoomPlugin","useEffect","a","fetch","then","res","json","data","getChartData","Object","keys","forEach","state","dates","date","push","prevDayCases","total","datasets","label","options","responsive","scales","yAxes","ticks","beginAtZero","elements","line","borderWidth","fill","backgroundColor","tension","point","radius","hoverRadius","opacity","plugins","tooltip","enabled","zoom","wheel","pinch","mode","pan","speed","className","Map","stateData","center","setcenter","map","setmap","setzoom","presentMap","setPresentMap","mapDataStates","setView","fillBlueOptions","fillColor","fillOpacity","weight","geoJsonStyle","dashArray","clicked","e","l","ourCenter","centerOfMass","geometry","coordinates","x","console","log","onEachState","layer","bindTooltip","properties","HASC_1","slice","pane","on","event","target","setStyle","ourCircles","length","features","Circle","pathOptions","Math","sqrt","MapContainer","scrollWheelZoom","whenCreated","LayerGroup","GeoJSON","style","onEachFeature","StatBox","setType","appType","totalCases","cases","caseType","onClick","Card","CardContent","CircularProgress","Table","setState","typeName","setTypeName","sort","b","key","Button","active","numeral","format","App","setStateData","getStatesData","FormControl","Select","value","onChange","MenuItem","delta7","vaccinated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae5d9954.chunk.js","sourcesContent":["export const indian_states_code = {\r\n    \"AN\":\"Andaman and Nicobar Islands\",\r\n    \"AP\":\"Andhra Pradesh\",\r\n    \"AR\":\"Arunachal Pradesh\",\r\n    \"AS\":\"Assam\",\r\n    \"BR\":\"Bihar\",\r\n    \"CT\":\"Chandigarh\",\r\n    \"CH\":\"Chhattisgarh\",\r\n    \"DN\":\"Dadra and Nagar Haveli\",\r\n    \"DD\":\"Daman and Diu\",\r\n    \"DL\":\"Delhi\",\r\n    \"GA\":\"Goa\",\r\n    \"GJ\":\"Gujarat\",\r\n    \"HR\":\"Haryana\",\r\n    \"HP\":\"Himachal Pradesh\",\r\n    \"JK\":\"Jammu and Kashmir\",\r\n    \"JH\":\"Jharkhand\",\r\n    \"KA\":\"Karnataka\",\r\n    \"KL\":\"Kerala\",\r\n    \"LA\":\"Ladakh\",\r\n    \"LD\":\"Lakshadweep\",\r\n    \"MP\":\"Madhya Pradesh\",\r\n    \"MH\":\"Maharashtra\",\r\n    \"MN\":\"Manipur\",\r\n    \"ML\":\"Meghalaya\",\r\n    \"MZ\":\"Mizoram\",\r\n    \"NL\":\"Nagaland\",\r\n    \"OR\":\"Odisha\",\r\n    \"PY\":\"Puducherry\",\r\n    \"PB\":\"Punjab\",\r\n    \"RJ\":\"Rajasthan\",\r\n    \"SK\":\"Sikkim\",\r\n    \"TN\":\"Tamil Nadu\",\r\n    \"TG\":\"Telangana\",\r\n    \"TR\":\"Tripura\",\r\n    \"UP\":\"Uttar Pradesh\",\r\n    \"UT\":\"Uttarakhand\",\r\n    \"WB\":\"West Bengal\",\r\n    \"TT\":\"India\"\r\n  }\r\n\r\n  export const color = {\r\n    confirmed:{\r\n      bgColor:'rgb(0, 0, 255)',\r\n      borderColor:'rgba(0, 0, 255, 0.5)',\r\n      multiplier:250\r\n    },\r\n    recovered:{\r\n      bgColor:'rgb(0, 255, 0)',\r\n      borderColor:'rgba(0, 255, 0, 0.5)',\r\n      multiplier:150\r\n    },\r\n    deceased:{\r\n      bgColor:'rgb(92, 48, 78)',\r\n      borderColor:'rgba(92, 48, 78, 0.5)',\r\n      multiplier:150\r\n    }\r\n  }","import React, { useEffect, useState } from 'react'\r\nimport {Line,Chart as ourChart} from 'react-chartjs-2'\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\n\r\nimport './Chart.css'\r\nimport { color,indian_states_code } from './util'\r\n\r\n\r\nexport default function Chart({type,stateCurrent}) {\r\n\r\n    const labels=[]\r\n    const dataState=[]\r\n    const [chartData, setChartData] = useState([])\r\n    ourChart.register(zoomPlugin);\r\n\r\n    useEffect(() => {\r\n        const getChartData = async () => {\r\n            await fetch('https://api.covid19india.org/v4/min/timeseries.min.json')\r\n            .then((res)=>res.json())\r\n            .then(data=>setChartData(data))\r\n        }\r\n        getChartData()\r\n    }, [])\r\n\r\n    Object.keys(chartData).forEach(state=>{\r\n        if(state===stateCurrent){\r\n            Object.keys(chartData[state]?.dates).forEach(date=>labels.push(date))\r\n            let prevDayCases = 0\r\n            Object.keys(chartData[state]?.dates).forEach(date=>{\r\n                dataState.push(chartData[state]?.dates[date].total[type]-prevDayCases)\r\n                prevDayCases=chartData[state]?.dates[date].total[type]\r\n            })\r\n        }\r\n    })\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: `${type} per day in ${indian_states_code[stateCurrent]}  (scroll/pinch to zoom)`,\r\n                data: dataState,\r\n            },\r\n        ],\r\n    };\r\n    \r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n        yAxes: [\r\n            {\r\n            ticks: {\r\n                beginAtZero: true,\r\n            },\r\n            },\r\n        ],\r\n        },\r\n        elements:{\r\n            line:{\r\n                borderWidth:0.7,\r\n                fill: false,\r\n                backgroundColor: color[type]?.bgColor,\r\n                borderColor: color[type]?.borderColor,\r\n                tension:1,\r\n            },\r\n            point:{            \r\n                radius:2,\r\n                hoverRadius:5,\r\n                opacity:1\r\n            }\r\n        },\r\n        plugins:{\r\n            tooltip:{\r\n                enabled:true,\r\n                backgroundColor:color[type]?.bgColor\r\n            },\r\n            zoom: {\r\n                zoom: {\r\n                  wheel: {\r\n                    enabled: true,\r\n                  },\r\n                  pinch: {\r\n                    enabled: true\r\n                  },\r\n                  mode: 'xy',\r\n                },\r\n                pan: {\r\n                    enabled: true,\r\n                    mode: 'xy',\r\n                    speed:10\r\n                },\r\n\r\n              }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className='chart'>\r\n            <Line data={data} options={options} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { MapContainer,GeoJSON, Circle, LayerGroup } from 'react-leaflet'\r\nimport './Map.css'\r\nimport mapDataStates from './mapData/india_states.json'\r\nimport { color, indian_states_code } from './util'\r\nimport { centerOfMass } from \"@turf/turf\";\r\n\r\nexport default function Map({type,stateData}) {\r\n\r\n    const [center, setcenter] = useState([22.5937, 77.7])\r\n    const [map, setmap] = useState(null)\r\n    const [zoom, setzoom] = useState(5)\r\n    const [presentMap, setPresentMap] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setPresentMap(mapDataStates)\r\n    }, [])\r\n\r\n    if (map) {\r\n        map.setView(center,zoom);\r\n    }\r\n\r\n    const fillBlueOptions = { \r\n        fillColor: (type!=='deceased')?color[type]?.bgColor:'white',\r\n        color:(type!=='deceased')?color[type]?.bgColor:'white',\r\n        fillOpacity:0.08,\r\n        opacity:0.6,\r\n        weight:1 \r\n    }\r\n\r\n    const geoJsonStyle = {\r\n        fillColor:'black',\r\n        fillOpacity:0,\r\n        weight:1,\r\n        dashArray:5,\r\n        color:(type!=='deceased')?color[type]?.bgColor:'white'\r\n    }\r\n\r\n    const clicked = (e,l) => {\r\n        let ourCenter = centerOfMass(e)?.geometry.coordinates\r\n        let x = ourCenter[0]\r\n        ourCenter[0]=ourCenter[1]\r\n        ourCenter[1]=x\r\n        setcenter(ourCenter)\r\n        setzoom(7)\r\n        console.log('click');\r\n    }\r\n    \r\n    const onEachState = async (state,layer) => {\r\n\r\n        layer.bindTooltip(indian_states_code[(state?.properties.HASC_1).slice(3,5)])  \r\n        layer.options.pane='shadowPane'\r\n        console.log(indian_states_code[(state?.properties.HASC_1).slice(3,5)]);\r\n        \r\n        layer.on(\r\n            'click',()=>{\r\n                clicked(state,layer)\r\n            }\r\n        )\r\n        layer.on(\r\n            'mouseover',(event)=>{\r\n                event.target.setStyle({\r\n                    fillColor:`${(type!=='deceased')?color[type]?.bgColor:'white'}`,\r\n                    fillOpacity:0.3\r\n                })\r\n            }\r\n        )\r\n        layer.on(\r\n            'mouseout',(event)=>{\r\n                event.target.setStyle({\r\n                    fillColor:'black',\r\n                    fillOpacity:0\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    let ourCircles={}\r\n\r\n    if(Object.keys(stateData).length!==0){\r\n        ourCircles = presentMap?.features.map((state)=>{\r\n             let ourCenter = centerOfMass(state)?.geometry.coordinates\r\n             let x = ourCenter[0]\r\n             ourCenter[0]=ourCenter[1]\r\n             ourCenter[1]=x\r\n\r\n\r\n\r\n             const circle =  <Circle \r\n                center={ourCenter} \r\n                pathOptions={fillBlueOptions} \r\n                radius={\r\n                    // stateData[(state?.properties.HASC_1).slice(3,5)]?.delta7[type]||0\r\n                    Math.sqrt(stateData[(state?.properties.HASC_1).slice(3,5)]?.total[type])*color[type]?.multiplier||0\r\n                    } ></Circle>\r\n            return circle\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='map'>\r\n            <MapContainer  center={center} zoom={zoom} scrollWheelZoom={true} whenCreated={setmap}>\r\n                {/* <Pane style={{zIndex:1}}> */}\r\n                    <LayerGroup>\r\n                        {Object.keys(ourCircles).length && ourCircles}\r\n                    </LayerGroup>\r\n                {/* </Pane> */}\r\n                {/* <Pane style={{zIndex:2}}> */}\r\n                {(Object.keys(stateData).length!==0)&&<GeoJSON style={geoJsonStyle} data={presentMap?.features} onEachFeature={(e,l)=>onEachState(e,l)}/>}\r\n                {/* </Pane> */}\r\n                {/* <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                ></TileLayer> */}\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n","import { Card, CardContent, CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './StatBox.css'\r\nimport { color } from './util'\r\n\r\nexport default function StatBox({setType,appType,type,totalCases,cases}) {\r\n    let caseType = ''\r\n    switch(type){\r\n        case 'Total Cases':\r\n            caseType='confirmed'\r\n            break;\r\n        case 'Recovered':\r\n            caseType='recovered'\r\n            break;\r\n        case 'Death':\r\n            caseType='deceased'\r\n            break;\r\n        default :\r\n            break;\r\n    }\r\n    return (\r\n        <div className='card_stats' onClick={()=>setType(caseType)}>\r\n            <Card >\r\n                {(caseType===appType)&&<div style={{backgroundColor:`${color[caseType]?.bgColor}`}} className='statBox_active'></div>}\r\n                <CardContent>\r\n                    <div className='card_statsHeading'>\r\n                        {type}\r\n                    </div>\r\n                    <div className='card_statsToday'>\r\n                        {cases?cases:<CircularProgress />}\r\n                    </div>\r\n                    <div className='card_statsTotal'>\r\n                        {totalCases?totalCases:<CircularProgress />}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import numeral from 'numeral';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { indian_states_code } from './util';\r\nimport './Table.css'\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function Table({type,setType,setState,stateData}) {\r\n\r\n    const data = {}\r\n    const [typeName, setTypeName] = useState('Cases')\r\n\r\n    useEffect(() => {\r\n        switch(type){\r\n            case 'confirmed':\r\n                setTypeName('Cases')\r\n                break;\r\n            case 'recovered':\r\n                setTypeName('Recovered')\r\n                break;\r\n            case 'deceased':\r\n                setTypeName('Deaths')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    Object.keys(stateData).sort((a,b)=>{\r\n        if(stateData[a]?.total[type]>stateData[b]?.total[type]){\r\n            return -1\r\n        }else{\r\n            return 1\r\n        }\r\n    }).forEach((key)=> {\r\n        data[key] = stateData[key];\r\n      });\r\n\r\n    return (\r\n        <>\r\n            <div className='btns_table'>\r\n                <Button active onClick={()=>setType('confirmed')} color=\"primary\">Cases</Button>\r\n                <Button onClick={()=>setType('recovered')} color=\"secondary\">Recovered</Button>\r\n                <Button onClick={()=>setType('deceased')} color=\"primary\">Deaths</Button>\r\n            </div>\r\n            <div className='table'>\r\n                <tr>\r\n                    <th>State</th>\r\n                    <th>{typeName}</th>\r\n                </tr>\r\n                <tr onClick={()=>setState('TT')}>\r\n                    <td>India</td>\r\n                    <td>{numeral(stateData['TT']?.total[type]).format('0.0a')}</td>\r\n                </tr>\r\n                {\r\n                    Object.keys(data).map(state=>{\r\n                        if(state!=='TT'){\r\n                            return(\r\n                                <tr onClick={()=>setState(state)}>\r\n                                    <td>{indian_states_code[state]}</td>\r\n                                    <td>{numeral(data[state]?.total[type]).format('0.0a')}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        return null\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { FormControl, MenuItem, Select } from '@material-ui/core';\nimport numeral from 'numeral';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Chart from './Chart';\nimport Map from './Map';\nimport StatBox from './StatBox';\nimport Table from './Table';\nimport { indian_states_code } from './util';\nimport \"leaflet/dist/leaflet.css\";\n\n\nfunction App() {\n  const [state, setState] = useState('TT')\n  const [type, setType] = useState('confirmed')\n  const [stateData, setStateData] = useState({})\n\n  useEffect(() => {\n      const getStatesData = async () => {\n      await fetch('https://api.covid19india.org/v4/min/data.min.json')\n      .then((res)=>res.json())\n      .then(data=>(\n        setStateData(data)\n      ))\n    }\n    getStatesData()\n  }, [])\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_header\">\n        <h1>Covid Tracker</h1>\n        <FormControl>\n          <Select\n            value={state}\n            onChange={(e)=>setState(e.target.value)}\n          >\n            <MenuItem value='TT'>India</MenuItem>\n          {Object.keys(stateData).map((state)=>{\n              if(state!==\"TT\"){\n                return <MenuItem value={state}>{indian_states_code[state]}</MenuItem>\n              }\n              return 0\n            }\n          )}\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"body\">\n        <div className=\"app_left\">\n          <div className=\"app_statsBox\">\n            <StatBox \n              setType={setType}\n              appType={type}\n              type='Total Cases' \n              totalCases={numeral(stateData[state]?.total.confirmed).format('0.0a')} cases={numeral(stateData[state]?.delta7.confirmed).format('0 a')} />\n            <StatBox \n              setType={setType}\n              appType={type}\n              type='Recovered' \n              totalCases={numeral(stateData[state]?.total.recovered).format('0.0a')} \n              cases={numeral(stateData[state]?.delta7.recovered).format('0 a')} />\n            <StatBox \n              setType={setType}\n              appType={type}\n              type='Death' \n              totalCases={numeral(stateData[state]?.total.deceased).format('0.0a')} \n              cases={numeral(stateData[state]?.delta7.deceased).format('0 a')} />\n            <StatBox \n              setType={setType}\n              appType={type}\n              type='Vaccinated' \n              totalCases={numeral(stateData[state]?.total.vaccinated).format('0.0a')} \n              cases={numeral(stateData[state]?.delta7.vaccinated).format('0 a')} />\n          </div>\n          <div className=\"app_map\"><Map type={type} stateData={stateData}/></div>\n          {/* <Chart type={type} stateData={stateData} stateCurrent={state}/> */}\n        </div>\n        <div className=\"app_right\">\n          <div className=\"app_table\">\n            <Table type={type} setType={setType} setState={setState} stateData={stateData}/>\n          </div>\n          <div className=\"app_chart\">\n            <Chart type={type} stateData={stateData} stateCurrent={state}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}